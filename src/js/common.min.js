
document.addEventListener(
	"DOMContentLoaded", () => {
		// раздаем классы toggle первым элементам внутри родительских, предварительно почистив их у других элементов
let initClassToggleItem = function(parentElement, childElement) {
    if (document.querySelector(parentElement)) {
        const parents = document.querySelectorAll(parentElement);
        parents.forEach(function(element, index) {
            let childrens = parents[index].querySelectorAll(childElement);
            childrens.forEach(function(element, index) {
                childrens[index].classList.remove('toggle');
            });

            parents[index].querySelector(childElement).classList.add('toggle');
        });
    };
};

// функция будет перемещать блок в указанное место при определенной ширине экрана

let moving = function () {

    const windowWidth = window.innerWidth; // ширина экрана

    if (windowWidth <= 768) {
        document.querySelector('.b07__inner').append(document.querySelector('.b07-map'));
        document.querySelector('.b07__inner').append(document.querySelector('.b07__descr'));
    } else {
        document.querySelector('.b07').prepend(document.querySelector('.b07-map'));
        document.querySelector('.b07__descr-box').prepend(document.querySelector('.b07__descr'));
    };

};

moving();
window.addEventListener('resize', moving);if (document.querySelector('.js-burger')) {

    const btnBurger = document.querySelectorAll('.js-burger');

    // Открыть / закрыть бургер по клику на него
    function btnBurgerToggle(e) {
        e.target.classList.toggle('toggle');
    }

    // При ресайзе возвращаем кнопки в исходное состояние
    // function btnBurgerToggleClassRemove() {
    //     btnBurger.forEach(element => {
    //         element.classList.remove('toggle');
    //     });
    // }

    btnBurger.forEach(element => {
        element.addEventListener("click", btnBurgerToggle);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}

// по клику на .js-catalog-open-btn открываем / закрываем меню с категориями каталога
if (document.querySelector('.js-catalog-open-btn')) {
    const catalogOpenBtn = document.querySelectorAll('.js-catalog-open-btn');

    // Открыть / закрыть подменю по клику на .js-catalog-open-btn
    function toggleOpen(e) {

        const toggleBtn = (this.closest('.js-catalog-open-btn'));
        const toggleBody = toggleBtn.nextElementSibling;

        toggleBody.classList.toggle('toggle');
    }

    catalogOpenBtn.forEach(element => {
        element.addEventListener("click", toggleOpen);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}



initClassToggleItem('.options-type__variants', '.variants-item'); // инициализация вариантов, функция в helpers.js

// по щелчку на кнопку с выбором типа .options-type__current появляется выпадашка с вариантами
let optionsToggle = function() {

    if (document.querySelector('.options-type__current')) {
        let optionsTypeCurrent = document.querySelectorAll('.options-type__current');
        optionsTypeCurrent.forEach(function(element, index) {
            element.addEventListener('click', function() {
                this.parentElement.classList.toggle('toggle');
            });
        });
    };
};

optionsToggle();





// выбор варианта
let optionsSelect = function() {

    let btnVariants = document.querySelectorAll('.variants-item');
    let variantTitle;

    // по клику на вариант у всех убираем .toggle, а у активного добавляем его
    btnVariants.forEach(function(element, index) {
        element.addEventListener('click', function() {

            btnVariants.forEach(function(element) {
                element.classList.remove('toggle');
            });
            this.classList.toggle('toggle');

            // Текст выбраного варианта в кнопку
            variantTitle = this.innerText;
            this.parentElement.previousElementSibling.querySelector('.title').innerText = variantTitle;
            this.parentElement.classList.remove('toggle');
            this.closest('.options-type').classList.remove('toggle');

        });
    });

};

optionsSelect();// -include './myscripts/preloader.js'
		// Инициализация Inputmask
// https://github.com/RobinHerbots/Inputmask

function initInputMask() {
	let formPhone = document.querySelectorAll('.form__phone');
	formPhone.forEach(element => {
		Inputmask({ "mask": "+7 (999) 999-99-99" }).mask(element);
	});
}

initInputMask();

// Инициализация just-validate
// https://github.com/horprogs/Just-validate
// https://just-validate.dev/

// function initJustValidatHelpForme() {
// 	const validation = new JustValidate('.b06-form');

// 	validation
// 		.addField('.form__phone', [
// 			{
// 				rule: 'required',
// 				errorMessage: 'Введите телефон!',
// 			},
// 		])
// 		.addField('.form__agreement', [
// 			{
// 				rule: 'required',
// 				errorMessage: 'Подтвердите согласие на обработку персональных данных!',
// 			},
// 		])
// 		.addField('.form__email', [
// 			{
// 				rule: 'required',
// 				errorMessage: 'Email обязателен!',
// 			},
// 			{
// 				rule: 'email',
// 				errorMessage: 'Email не корректен!',
// 			},
// 		])
// }

// if (document.querySelector('.form__phone')) {
// 	initJustValidatHelpForme();
// }// -include './myscripts/accordeon.js'
		// -include './myscripts/initSwiper.js'
		// -include './myscripts/blazy-init.js'
	}
);
